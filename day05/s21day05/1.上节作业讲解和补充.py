#!/usr/bin/env python# -*- coding:utf-8 -*-""""""# 1. 简述解释性语言和编译型语言的区别？# 2. 列举你了解的Python的数据类型？"""字符串：str整型：int布尔值：bool列表：list元组：tuple"""# 3. 写代码，有如下列表，按照要求实现每一个功能。   # li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]#    - 计算列表的长度并输出  len(li)#    - 请通过步长获取索引为偶数的所有值，并打印出获取后的列表  li[::2]#    - 列表中追加元素"seven",并输出添加后的列表        # 错误        # result = li.append('seven')        # print(result)        # 正确        # li.append('seven')        # print(li)#    - 请在列表的第1个位置插入元素"Tony",并输出添加后的列表#         li.insert(0,'tony')#    - 请修改列表第2个位置的元素为"Kelly",并输出修改后的列表#             li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]#             li[1] = 'Kelly'#    - 请将列表的第3个位置的值改成 "太白"，并输出修改后的列表#    - 请将列表 l2=[1,"a",3,4,"heart"] 的每一个元素追加到列表li中，并输出添加后的列表#             li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]#             l2=[1,"a",3,4,"heart"]#             for item in l2:#                 li.append(item)#             print(li)              # li.extend(l2)              # print(li)#    - 请将字符串 s = "qwert"的每一个元素添加到列表li中，一行代码实现，不允许循环添加。# 循环实现# li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]# s = "qwert"# for char in s:#     li.append(char)# 使用方法直接实现# li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]# s = "qwert"# li.extend(s)# print(li)#    - 请删除列表中的元素"ritian",并输出添加后的列表# li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]# li.remove('ritian') # 根据值删除，不在则报错。#    - 请删除列表中的第2个元素，并输出删除元素后的列表# li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]# del li[2] # 仅仅是删除# deleted = li.pop(2) # 在列表中删除，并将删除的此数据赋值给deleted# print(li)# print(deleted)#    - 请删除列表中的第2至第4个元素，并输出删除元素后的列表# li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]## del li[1:4]# print(li)"""第三题总结：    - extend        # 1. 有列表 users = ['李忠伟','堂开发']  people = ['李鹏','张思达']                users.extend(people) # users中增加                people.extend(users) # people中增加        # 2. 有列表 users = ['李忠伟','堂开发']  people = ('李鹏','张思达')                users.extend(people) # users中增加                people.extend(users)  # 只有列表有extend功能，元组是没有的。    - pop和del的区别            li = ["alex", "WuSir", "ritian", "barry", "wenzhou"]            del li[2] # 仅仅是删除                        deleted = li.pop(2) # 在列表中删除，并将删除的此数据赋值给deleted            print(li)            print(deleted)    - 删除 li[1:8]"""# 4. 请用三种方法实现字符串反转 name = "小黑半夜三点在被窝玩愤怒的小鸟"（步长、while、for）# 方式一：# name = "小黑半夜三点在被窝玩愤怒的小鸟"# value = name[::-1]# 方式二：# name = "小黑半夜三点在被窝玩愤怒的小鸟"# value = ""# index = len(name) - 1 # 14# while index >=0:#     char = name[index]#     value = value + char#     index = index - 1# print(value)# 方式三：# name = "小黑半夜三点在被窝玩愤怒的小鸟"# index = 14# value = ""# for item in name:#     value += name[index]#     index -= 1# print(value)# 方式四：# range(0,10,1)   -> [0,1,2,3,4...9]# range(9,-1,-1)  -> [9,8,7.......0]# name = "小黑半夜三点在被窝玩愤怒的小鸟"# name_len = len(name) - 1# value = ""# for index in range(name_len,-1,-1):#     value += name[index]# print(value)# 练习：打印：0 ~ 100之间的偶数。# for i in range(0,101):#     if i % 2 == 0:#         print(i)# for i in range(0,101,2):#     print(i)# 练习：goods = ['汽车','飞机','大炮']# goods = ['汽车','飞机','大炮']## for i in range(0,len(goods)):#     print(i,goods[i])# num = input('请输入要选择的商品序号：')# num = int(num)## text = "您选择的是：%s" %(goods[num],)# print(text)# 练习：goods = ['汽车','飞机','大炮']# goods = ['汽车','飞机','大炮']## for i in range(0,len(goods)):#     print(i+1,goods[i])# num = input('请输入要选择的商品序号：')# num = int(num) - 1# text = "您选择的是：%s" %(goods[num],)# print(text)# 5. 写代码，有如下列表，利用切片实现每一个功能"""# #    ```python#    li = [1, 3, 2, "a", 4, "b", 5,"c"]#    ```# #    - 通过对li列表的切片形成新的列表 [1,3,2]#    - 通过对li列表的切片形成新的列表 ["a",4,"b"] #    - 通过对li列表的切片形成新的列表  [1,2,4,5]#    - 通过对li列表的切片形成新的列表 [3,"a","b"]      li[1:-1:2]#    - 通过对li列表的切片形成新的列表 [3,"a","b","c"]  li[1::2]#    - 通过对li列表的切片形成新的列表  ["c"]#    - 通过对li列表的切片形成新的列表 ["b","a",3]"""# 6. 请用代码实现循环输出元素和值：users = ["武沛齐","景女神","肖大侠"] ，如："""   ```python   0 武沛齐   1 景女神   2 肖大侠   ```"""# 7. 请用代码实现循环输出元素和值：users = ["武沛齐","景女神","肖大侠"] ，如："""   ```python   1 武沛齐   2 景女神   3 肖大侠   ```"""# 8. 写代码，有如下列表，按照要求实现每一个功能。"""   ```python   lis = [2, 3, "k", ["qwe", 20, ["k1", ["tt", 3, "1"]], 89], "ab", "adv"]   ```   - 将列表lis中的"k"变成大写，并打印列表。        lis[2] = "K"        lis[2] = lis[2].upper()                lis[3][0] = lis[3][0].upper()   - 将列表中的数字3变成字符串"100"        li[1] = '100'   - 将列表中的字符串"tt"变成数字 101        li[3][2][1][0] = 101   - 在 "qwe"前面插入字符串："火车头"        li[3].insert(0,'火车头')"""# 9. 写代码实现以下功能"""   - 如有变量 googs = ['汽车','飞机','火箭'] 提示用户可供选择的商品：     ```python     0,汽车     1,飞机     2,火箭     ```   - 用户输入索引后，将指定商品的内容拼接打印，如：用户输入0，则打印 您选择的商品是汽车。"""# 10. 请用代码实现"""    li = "alex"    利用下划线将列表的每一个元素拼接成字符串"a_l_e_x"    value = "_".join(li)        # 练习一： users = ['贺鹏飞','朱海','城根'] 通过，将列表中的元素拼接："贺鹏飞,珠海,城根"    # users = ['贺鹏飞','朱海','城根']    # users = ('贺鹏飞','朱海','城根')    # result = ",".join(users)    # print(result)"""# 11. 利用for循环和range找出 0 ~ 100 以内所有的偶数，并追加到一个列表。"""data_list = []for i in range(0,101):    if i % 2 == 0:        data_list.append(i)                data_list = []for i in range(0,101,2):    data_list.append(i)"""# 12. 利用for循环和range 找出 0 ~ 50 以内能被3整除的数，并追加到一个列表。"""data_list = []for i in range(0,51):    if i % 3 == 0:        data_list.append(i)print(data_list)"""# 13. 利用for循环和range 找出 0 ~ 50 以内能被3整除的数，并插入到列表的第0个索引位置，最终结果如下："""data_list = []for i in range(0,51):    if i % 3 == 0:        data_list.insert(0,i)print(data_list)"""# 14. 查找列表li中的元素，移除每个元素的空格，并找出以"a"开头，并添加到一个新列表中,最后循环打印这个新列表。"""    ```python    li = ["TaiBai ", "alexC", "AbC ", "egon", " riTiAn", "WuSir", "  aqc"]    ```""""""li = ["TaiBai ", "alexC", "AbC ", "egon", " riTiAn", "WuSir", "  aqc"]data_list = []for item in li:    item = item.strip()    if item.startswith('a'):        data_list.append(item)for item in data_list:    print(item)"""# 15. 判断是否可以实现，如果可以请写代码实现。"""    ```python    li = ["alex",[11,22,(88,99,100,),33] "WuSir", ("ritian", "barry",), "wenzhou"]    ```    - 请将 "WuSir" 修改成 "武沛齐"    - 请将 ("ritian", "barry",) 修改为 ['日天','日地']    - 请将 88 修改为 87      - 请将 "wenzhou" 删除，然后再在列表第0个索引位置插入 "文周"        del li[-1]        li.insert(0,'文周')    - 请将 "wenzhou" 删除，然后再在列表第0个索引位置插入 "wenzhou"        deleted = li.pop()        li.insert(0,deleted)"""# 16. 面试题 & 书写规范"""v1 = 1v2 = (1)v3 = (1,)print(type(v1),type(v2),type(v3))"""# data = [(1),(2),(3)] # [1,2,3]# 17. 用户输入# content = input("请输入：") # 5 + 99+7+  2+ uu + 7y ..."""total = 0content = "5 + 99+7+  2+ uu + 7y"num_list = content.split('+') # ["5  ",' 99',"7",'  2', ' uu '..]for item in num_list:    item = item.strip()    if item.isdigit():        total += int(item)print(total)"""